//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace WcfCrimShopService.com.evertecinc.mmpay {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MerchantServiceSoap", Namespace="http://tempuri.org/WebMerchant/MerchantService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class MerchantService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MakePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseACHTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseCardTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MerchantService() {
            this.Url = global::WcfCrimShopService.Properties.Settings.Default.WcfCrimShopService_com_evertecinc_mmpay_MerchantService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MakePaymentCompletedEventHandler MakePaymentCompleted;
        
        /// <remarks/>
        public event TransactionSearchCompletedEventHandler TransactionSearchCompleted;
        
        /// <remarks/>
        public event ReverseACHTransactionCompletedEventHandler ReverseACHTransactionCompleted;
        
        /// <remarks/>
        public event ReverseCardTransactionCompletedEventHandler ReverseCardTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMerchant/MerchantService/MakePayment", RequestNamespace="http://tempuri.org/WebMerchant/MerchantService", ResponseNamespace="http://tempuri.org/WebMerchant/MerchantService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakePayment(
                    string Username, 
                    string Password, 
                    string CustomerName, 
                    string CustomerID, 
                    string CustomerEmail, 
                    string Total, 
                    string DescriptionBuy, 
                    string TaxAmount1, 
                    string address1, 
                    string address2, 
                    string city, 
                    string zipcode, 
                    string telephone, 
                    string fax, 
                    string ignoreValues, 
                    string language, 
                    string TaxAmount2, 
                    string TaxAmount3, 
                    string TaxAmount4, 
                    string TaxAmount5, 
                    string filler1, 
                    string filler2, 
                    string filler3) {
            object[] results = this.Invoke("MakePayment", new object[] {
                        Username,
                        Password,
                        CustomerName,
                        CustomerID,
                        CustomerEmail,
                        Total,
                        DescriptionBuy,
                        TaxAmount1,
                        address1,
                        address2,
                        city,
                        zipcode,
                        telephone,
                        fax,
                        ignoreValues,
                        language,
                        TaxAmount2,
                        TaxAmount3,
                        TaxAmount4,
                        TaxAmount5,
                        filler1,
                        filler2,
                        filler3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakePaymentAsync(
                    string Username, 
                    string Password, 
                    string CustomerName, 
                    string CustomerID, 
                    string CustomerEmail, 
                    string Total, 
                    string DescriptionBuy, 
                    string TaxAmount1, 
                    string address1, 
                    string address2, 
                    string city, 
                    string zipcode, 
                    string telephone, 
                    string fax, 
                    string ignoreValues, 
                    string language, 
                    string TaxAmount2, 
                    string TaxAmount3, 
                    string TaxAmount4, 
                    string TaxAmount5, 
                    string filler1, 
                    string filler2, 
                    string filler3) {
            this.MakePaymentAsync(Username, Password, CustomerName, CustomerID, CustomerEmail, Total, DescriptionBuy, TaxAmount1, address1, address2, city, zipcode, telephone, fax, ignoreValues, language, TaxAmount2, TaxAmount3, TaxAmount4, TaxAmount5, filler1, filler2, filler3, null);
        }
        
        /// <remarks/>
        public void MakePaymentAsync(
                    string Username, 
                    string Password, 
                    string CustomerName, 
                    string CustomerID, 
                    string CustomerEmail, 
                    string Total, 
                    string DescriptionBuy, 
                    string TaxAmount1, 
                    string address1, 
                    string address2, 
                    string city, 
                    string zipcode, 
                    string telephone, 
                    string fax, 
                    string ignoreValues, 
                    string language, 
                    string TaxAmount2, 
                    string TaxAmount3, 
                    string TaxAmount4, 
                    string TaxAmount5, 
                    string filler1, 
                    string filler2, 
                    string filler3, 
                    object userState) {
            if ((this.MakePaymentOperationCompleted == null)) {
                this.MakePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakePaymentOperationCompleted);
            }
            this.InvokeAsync("MakePayment", new object[] {
                        Username,
                        Password,
                        CustomerName,
                        CustomerID,
                        CustomerEmail,
                        Total,
                        DescriptionBuy,
                        TaxAmount1,
                        address1,
                        address2,
                        city,
                        zipcode,
                        telephone,
                        fax,
                        ignoreValues,
                        language,
                        TaxAmount2,
                        TaxAmount3,
                        TaxAmount4,
                        TaxAmount5,
                        filler1,
                        filler2,
                        filler3}, this.MakePaymentOperationCompleted, userState);
        }
        
        private void OnMakePaymentOperationCompleted(object arg) {
            if ((this.MakePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakePaymentCompleted(this, new MakePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMerchant/MerchantService/TransactionSearch", RequestNamespace="http://tempuri.org/WebMerchant/MerchantService", ResponseNamespace="http://tempuri.org/WebMerchant/MerchantService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TransactionSearchResponse", Namespace="Evertec.MMPay.TransactionSearch")]
        public TransactionSearchResponse TransactionSearch([System.Xml.Serialization.XmlElementAttribute(Namespace="Evertec.MMPay.TransactionSearch")] TransactionSearchRequest TransactionSearchRequest) {
            object[] results = this.Invoke("TransactionSearch", new object[] {
                        TransactionSearchRequest});
            return ((TransactionSearchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionSearchAsync(TransactionSearchRequest TransactionSearchRequest) {
            this.TransactionSearchAsync(TransactionSearchRequest, null);
        }
        
        /// <remarks/>
        public void TransactionSearchAsync(TransactionSearchRequest TransactionSearchRequest, object userState) {
            if ((this.TransactionSearchOperationCompleted == null)) {
                this.TransactionSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionSearchOperationCompleted);
            }
            this.InvokeAsync("TransactionSearch", new object[] {
                        TransactionSearchRequest}, this.TransactionSearchOperationCompleted, userState);
        }
        
        private void OnTransactionSearchOperationCompleted(object arg) {
            if ((this.TransactionSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionSearchCompleted(this, new TransactionSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMerchant/MerchantService/ReverseACHTransaction", RequestNamespace="http://tempuri.org/WebMerchant/MerchantService", ResponseNamespace="http://tempuri.org/WebMerchant/MerchantService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReverseTransactionResponse", Namespace="Evertec.MMPay.ReverseTransaction")]
        public ReverseTransactionResponse ReverseACHTransaction([System.Xml.Serialization.XmlElementAttribute(Namespace="Evertec.MMPay.ReverseTransaction")] ReverseTransactionRequest ReverseTransactionRequest) {
            object[] results = this.Invoke("ReverseACHTransaction", new object[] {
                        ReverseTransactionRequest});
            return ((ReverseTransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseACHTransactionAsync(ReverseTransactionRequest ReverseTransactionRequest) {
            this.ReverseACHTransactionAsync(ReverseTransactionRequest, null);
        }
        
        /// <remarks/>
        public void ReverseACHTransactionAsync(ReverseTransactionRequest ReverseTransactionRequest, object userState) {
            if ((this.ReverseACHTransactionOperationCompleted == null)) {
                this.ReverseACHTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseACHTransactionOperationCompleted);
            }
            this.InvokeAsync("ReverseACHTransaction", new object[] {
                        ReverseTransactionRequest}, this.ReverseACHTransactionOperationCompleted, userState);
        }
        
        private void OnReverseACHTransactionOperationCompleted(object arg) {
            if ((this.ReverseACHTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseACHTransactionCompleted(this, new ReverseACHTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMerchant/MerchantService/ReverseCardTransaction", RequestNamespace="http://tempuri.org/WebMerchant/MerchantService", ResponseNamespace="http://tempuri.org/WebMerchant/MerchantService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardReverseTransactionResponse", Namespace="Evertec.MMPay.CardReverseTransaction")]
        public CardReverseTransactionResponse ReverseCardTransaction([System.Xml.Serialization.XmlElementAttribute(Namespace="Evertec.MMPay.CardReverseTransaction")] CardReverseTransactionRequest CardReverseTransactionRequest) {
            object[] results = this.Invoke("ReverseCardTransaction", new object[] {
                        CardReverseTransactionRequest});
            return ((CardReverseTransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseCardTransactionAsync(CardReverseTransactionRequest CardReverseTransactionRequest) {
            this.ReverseCardTransactionAsync(CardReverseTransactionRequest, null);
        }
        
        /// <remarks/>
        public void ReverseCardTransactionAsync(CardReverseTransactionRequest CardReverseTransactionRequest, object userState) {
            if ((this.ReverseCardTransactionOperationCompleted == null)) {
                this.ReverseCardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseCardTransactionOperationCompleted);
            }
            this.InvokeAsync("ReverseCardTransaction", new object[] {
                        CardReverseTransactionRequest}, this.ReverseCardTransactionOperationCompleted, userState);
        }
        
        private void OnReverseCardTransactionOperationCompleted(object arg) {
            if ((this.ReverseCardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseCardTransactionCompleted(this, new ReverseCardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.TransactionSearch")]
    public partial class TransactionSearchRequest {
        
        private string usernameField;
        
        private string passwordField;
        
        private string accountIDField;
        
        private string minProcessDateField;
        
        private string maxProcessDateField;
        
        private string totalPriceField;
        
        private string taxAmount1Field;
        
        private string authorizationNumField;
        
        private string confirmationNumField;
        
        private PaymentMethodType paymentMethodField;
        
        private string requestIDField;
        
        private string merchantIdTransactionField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string MinProcessDate {
            get {
                return this.minProcessDateField;
            }
            set {
                this.minProcessDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxProcessDate {
            get {
                return this.maxProcessDateField;
            }
            set {
                this.maxProcessDateField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPrice {
            get {
                return this.totalPriceField;
            }
            set {
                this.totalPriceField = value;
            }
        }
        
        /// <remarks/>
        public string TaxAmount1 {
            get {
                return this.taxAmount1Field;
            }
            set {
                this.taxAmount1Field = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizationNum {
            get {
                return this.authorizationNumField;
            }
            set {
                this.authorizationNumField = value;
            }
        }
        
        /// <remarks/>
        public string ConfirmationNum {
            get {
                return this.confirmationNumField;
            }
            set {
                this.confirmationNumField = value;
            }
        }
        
        /// <remarks/>
        public PaymentMethodType PaymentMethod {
            get {
                return this.paymentMethodField;
            }
            set {
                this.paymentMethodField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantIdTransaction {
            get {
                return this.merchantIdTransactionField;
            }
            set {
                this.merchantIdTransactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.TransactionSearch")]
    public enum PaymentMethodType {
        
        /// <remarks/>
        _X,
        
        /// <remarks/>
        _A,
        
        /// <remarks/>
        _C,
        
        /// <remarks/>
        _M,
        
        /// <remarks/>
        _W,
        
        /// <remarks/>
        _S,
        
        /// <remarks/>
        _T,
        
        /// <remarks/>
        _U,
        
        /// <remarks/>
        _V,
        
        /// <remarks/>
        _Unassigned,
        
        /// <remarks/>
        _Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.ReverseTransaction")]
    public partial class ReverseTransactionResponse {
        
        private string getErrorField;
        
        private string getMessageField;
        
        private string statusCodeField;
        
        private bool fieldErrorField;
        
        private object[] fieldErrorListField;
        
        private ResponseStatusType1 responseStatusField;
        
        private string requestIDField;
        
        private decimal amountField;
        
        private string fullNameField;
        
        /// <remarks/>
        public string getError {
            get {
                return this.getErrorField;
            }
            set {
                this.getErrorField = value;
            }
        }
        
        /// <remarks/>
        public string getMessage {
            get {
                return this.getMessageField;
            }
            set {
                this.getMessageField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool FieldError {
            get {
                return this.fieldErrorField;
            }
            set {
                this.fieldErrorField = value;
            }
        }
        
        /// <remarks/>
        public object[] FieldErrorList {
            get {
                return this.fieldErrorListField;
            }
            set {
                this.fieldErrorListField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatusType1 ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ResponseStatusType", Namespace="Evertec.MMPay.ReverseTransaction")]
    public enum ResponseStatusType1 {
        
        /// <remarks/>
        _Approved,
        
        /// <remarks/>
        _AuthenticationError,
        
        /// <remarks/>
        _Completed,
        
        /// <remarks/>
        _Declined,
        
        /// <remarks/>
        _Error,
        
        /// <remarks/>
        _Exception,
        
        /// <remarks/>
        _Failed,
        
        /// <remarks/>
        _Pending,
        
        /// <remarks/>
        _Processing,
        
        /// <remarks/>
        _Rejected,
        
        /// <remarks/>
        _Reversed,
        
        /// <remarks/>
        _Successfull,
        
        /// <remarks/>
        _Unassigned,
        
        /// <remarks/>
        _Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.ReverseTransaction")]
    public partial class ReverseTransactionRequest {
        
        private string usernameField;
        
        private string passwordField;
        
        private string requestIDField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.CardReverseTransaction")]
    public partial class CardReverseTransactionResponse {
        
        private string getErrorField;
        
        private string getMessageField;
        
        private string statusCodeField;
        
        private bool fieldErrorField;
        
        private object[] fieldErrorListField;
        
        private ResponseStatusType responseStatusField;
        
        private string requestIDField;
        
        private string transactionIDField;
        
        private string approvalCodeField;
        
        private string responseTextField;
        
        /// <remarks/>
        public string getError {
            get {
                return this.getErrorField;
            }
            set {
                this.getErrorField = value;
            }
        }
        
        /// <remarks/>
        public string getMessage {
            get {
                return this.getMessageField;
            }
            set {
                this.getMessageField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool FieldError {
            get {
                return this.fieldErrorField;
            }
            set {
                this.fieldErrorField = value;
            }
        }
        
        /// <remarks/>
        public object[] FieldErrorList {
            get {
                return this.fieldErrorListField;
            }
            set {
                this.fieldErrorListField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatusType ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovalCode {
            get {
                return this.approvalCodeField;
            }
            set {
                this.approvalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseText {
            get {
                return this.responseTextField;
            }
            set {
                this.responseTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.CardReverseTransaction")]
    public enum ResponseStatusType {
        
        /// <remarks/>
        _Approved,
        
        /// <remarks/>
        _AuthenticationError,
        
        /// <remarks/>
        _Completed,
        
        /// <remarks/>
        _Declined,
        
        /// <remarks/>
        _Error,
        
        /// <remarks/>
        _Exception,
        
        /// <remarks/>
        _Failed,
        
        /// <remarks/>
        _Pending,
        
        /// <remarks/>
        _Processing,
        
        /// <remarks/>
        _Rejected,
        
        /// <remarks/>
        _Reversed,
        
        /// <remarks/>
        _Successfull,
        
        /// <remarks/>
        _Unassigned,
        
        /// <remarks/>
        _Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.CardReverseTransaction")]
    public partial class CardReverseTransactionRequest {
        
        private string usernameField;
        
        private string passwordField;
        
        private string requestIDField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Evertec.MMPay.TransactionSearch")]
    public partial class TransactionSearchResponse {
        
        private string getErrorField;
        
        private string getMessageField;
        
        private string statusCodeField;
        
        private bool fieldErrorField;
        
        private object[] fieldErrorListField;
        
        private ResponseStatusType2 responseStatusField;
        
        private System.Data.DataSet transactionDetailField;
        
        private int affectedRowsField;
        
        /// <remarks/>
        public string getError {
            get {
                return this.getErrorField;
            }
            set {
                this.getErrorField = value;
            }
        }
        
        /// <remarks/>
        public string getMessage {
            get {
                return this.getMessageField;
            }
            set {
                this.getMessageField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool FieldError {
            get {
                return this.fieldErrorField;
            }
            set {
                this.fieldErrorField = value;
            }
        }
        
        /// <remarks/>
        public object[] FieldErrorList {
            get {
                return this.fieldErrorListField;
            }
            set {
                this.fieldErrorListField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatusType2 ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet TransactionDetail {
            get {
                return this.transactionDetailField;
            }
            set {
                this.transactionDetailField = value;
            }
        }
        
        /// <remarks/>
        public int AffectedRows {
            get {
                return this.affectedRowsField;
            }
            set {
                this.affectedRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34283")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ResponseStatusType", Namespace="Evertec.MMPay.TransactionSearch")]
    public enum ResponseStatusType2 {
        
        /// <remarks/>
        _Approved,
        
        /// <remarks/>
        _AuthenticationError,
        
        /// <remarks/>
        _Completed,
        
        /// <remarks/>
        _Declined,
        
        /// <remarks/>
        _Error,
        
        /// <remarks/>
        _Exception,
        
        /// <remarks/>
        _Failed,
        
        /// <remarks/>
        _Pending,
        
        /// <remarks/>
        _Processing,
        
        /// <remarks/>
        _Rejected,
        
        /// <remarks/>
        _Reversed,
        
        /// <remarks/>
        _Successfull,
        
        /// <remarks/>
        _Unassigned,
        
        /// <remarks/>
        _Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void MakePaymentCompletedEventHandler(object sender, MakePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TransactionSearchCompletedEventHandler(object sender, TransactionSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ReverseACHTransactionCompletedEventHandler(object sender, ReverseACHTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseACHTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseACHTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReverseTransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReverseTransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ReverseCardTransactionCompletedEventHandler(object sender, ReverseCardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseCardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseCardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardReverseTransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardReverseTransactionResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591